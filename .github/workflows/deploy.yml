name: Deploy
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  id-token: write # This is required for aws oidc connection
  contents: read # This is required for actions/checkout
  pull-requests: write # This is required for gh bot to comment PR

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Clone repository
        uses: actions/checkout@v4

      - name: Install Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x

      - name: Cache transform_images data
        id: transform_images_cache
        uses: actions/cache@v4
        with:
          path: _cache
          key: transform_images_cache-${{ hashFiles('**/*.png') }}

      - name: Cache deno dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.deno
            ~/.cache/deno
          key: deno_cache-${{ hashFiles('**/deno.json', '**/*.ts') }}

      - name: Build
        run: deno task build

      - name: Archive Production Artifact
        uses: actions/upload-artifact@master
        with:
          name: _site
          path: .lume/_site/

  deploy:
    name: Deploy
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Clone repository
        uses: actions/checkout@v3

      - name: Install Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x

      - name: Cache deno
        uses: actions/cache@v4
        with:
          path: |
            ~/.deno
            ~/.cache/deno
          key: deno_cache-${{ hashFiles('**/deno.json', '**/*.ts') }}

      - name: Download Artifact
        uses: actions/download-artifact@master
        with:
          name: _site
          path: .lume/_site/

      - name: Upload to Deno Deploy
        id: deploy
        env:
          DENO_DEPLOY_TOKEN: ${{ secrets.DENO_DEPLOY_TOKEN }}
        run: deno task deploy ${{ endsWith(github.ref, '/main') && '--prod' || '' }}

      - name: Create comment with deploy output
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        env:
          DEPLOY_OUTPUT: "${{ steps.deploy.outputs.stdout }}"
        with:
          script: |
            const output = `
              <details><summary>Output</summary>

                \`\`\`bash
                ${process.env.DEPLOY_OUTPUT}
                \`\`\`

              </details>

              *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*
            `;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })


