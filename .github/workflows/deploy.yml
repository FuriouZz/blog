name: Deploy
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Clone repository
        uses: actions/checkout@v3

      - name: Install Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x

      - name: Build
        run: deno task build

      - name: Archive Production Artifact
        uses: actions/upload-artifact@master
        with:
          name: _site
          path: .lume/_site/

  deploy:
    name: Deploy
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Clone repository
        uses: actions/checkout@v3

      - name: Install Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x

      - name: Download Artifact
        uses: actions/download-artifact@master
        with:
          name: _site
          path: .lume/_site/

      - name: Upload to Deno Deploy
        id: deploy
        env:
          DENO_DEPLOY_TOKEN: ${{ secrets.DENO_DEPLOY_TOKEN }}
        run: |
          OUTPUT=$(deno task deploy ${{ endsWith(github.ref, '/main') && '--prod' || '' }})
          echo "DENO_DEPLOY_URLS=$OUTPUT" >> $GITHUB_OUTPUT

      - name: Add comment to pull request
        uses: actions/github-script@v7
        if: ${{ github.event_name == 'pull_request' }}
        env:
          DENO_DEPLOY_URLS: ${{ steps.deploy.outputs.DENO_DEPLOY_URLS }}
        with:
          script: |
            const output = `$DENO_DEPLOY_URLS`;
            const body = output.slice(output.lastIndexOf("View at:")).trim();
            github.rest.issues.createComment({
              owner: context.issue.owner,
              repo: context.issue.repo,
              issue_number: context.issue.number,
              body,
            });
